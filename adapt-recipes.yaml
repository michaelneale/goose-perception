version: 1.0.0
title: Adapt perception recipes automatically
author:
  contact: mic
description: Reflect on how things are working, and make adjustments to the recipes to improve them
extensions:
- type: builtin
  name: developer
  display_name: Google Drive
  timeout: 300
  bundled: true



prompt: |  
  your job is to optimise background processes (called recipes) which are running on this operating system to help the user go about their day. 
  
  take a look in looking in ~/.local/share/goose-perception/ 
    LATEST_WORK.md 
    INTERACTIONS.md 
    CONTRIBUTIONS.md 
    PROJECTS.md 
    INTERESTS.md
    OPTIMIZE.md
  will help to form a picture of what is going on in the users work world

  you can also tail some information from ACTIVITY-LOG.md in that directory to see what actions have happened.
  If that is a very large file - truncate it a bit (try to keep it below 10KB) 

  There may be some interesting information in FAILURES.md which can help you understand what has not been working well, once addressed, you can clean out that file.

  You have the following important tasks to do:

  Task 1, Optimizing observers:

    your job is then to look at each recipe-*.yaml file in ./observers/ directory or the  ~/.local/share/goose-perception/adapted-observers/ directory
    In the ./observers directory are the original ones, and in ~/.local/share/goose-perception/adapted-observers/ are local adaptations you have previously made.
    The ones in the adapted-observers/ take precedence over the same named one in ./observers, so consider accordingly.
    
    Look at their content, description and prompt to discern the aims. 

    If any are clearly not working well, you can edit them.
    Some may not be working well due to a lack of permissions or dependencies, so you may be able to resolve that or prompt the user to help 
    If one is already in the adapted-observers/ you can edit it in place, or remove it (perhaps it is not needed or it ie better to revert to default by just removing it)
    If a recipe is not in the adapted-observers/ directory and you need to edit, IMPORTANT that you first copy it to the adapted-observers/ directory, and edit it in place there.

    Your aim is to adapt recipes so they work more effectively for the user, relative to their system and how they work. 
    Changes ideally are incremental, but if clear, you can add a new set of instructions to the prompt for it to take on
    If your changes aren't working, remove the file from the adapted-observers/ directory

    You may see errors to do with "MCP servers" - it may be that they are not set up on their system, one option is to remove that MCP server from the recipe.
    To validate a recipe after making changes, use `goose recipe validate <NAME>`. 
    If you've made worthwhile changes to the background process and would like to test it out, you may use `goose run --recipe <NAME>` to run it immediately.
    

    your goals: 
      reduce errors on their system by solving technical problems or disabling MCPs or simplifying recipes
      checking your changes work by running the recipe
      looking at how parts of the receipe may be able to be extracted into ~/.local/share/goose-perception/scripts/RECIPE_NAME.sh. The recipe can then specify (in english) that it can try to invoke that script. 
      considering adaptations that may be more relevant to the user 
      ensuring all recipes include required fields (title, description) based on recipe_spec.md

    Once done - append a short note to ACTIVITY-LOG.md about what you did, and why, and what you hope to achieve

  Task 2: create pre-emptive recipes based on repeated actions

    Similar to the above, consider actions taken on users behalf by loading ~/.local/share/goose-perception/actions_taken.txt looking at recent actions (it may be large, truncate earlier lines in the file to keep it below 10kb).
    note what recipes are called in there
    If there are are many repeated instances of the same action taken within the last week, note which action it is and its frequency
    then copy the recipe file from the actions/ directory to ~/.local/share/goose-perception/automated-actions/ in a daily/weekly sub folder
    The recipe should only exist in one of those folders at a time.
    If there are mentions of that recipe in FAILURES.md then remove it from the automated-actions dir
    If the user has made a note to NOT run an automated action, remove the file from automated-actions/ sub directory.
    If the file in the automated-actions/ sub directory is over a month old, remove it.    
    


  