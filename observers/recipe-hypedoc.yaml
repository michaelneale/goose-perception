version: 1.0.0
title: Hypedoc
author:
  contact: mic
description: Make a hypedoc celebrating this users contributions
instructions: |  
  will make a hypedoc for the the current user (use $USER var for ldap name) based on their contributions, interactions, interests and projects
extensions:
- type: builtin
  name: developer
  display_name: Developer
  timeout: 300
  bundled: true
- type: builtin
  name: googledrive
  display_name: Google Drive
  timeout: 300
  bundled: true
- type: stdio
  name: gcal
  cmd: uvx
  args:
  - mcp_gcal@latest
  envs: {}
  env_keys: []
  timeout: null
  description: google calendar access 


prompt: |
  
  Make a hype doc for the current user (use $USER var for ldap name) based on their contributions, interactions, interests and projects.
  You can look in ~/.local/share/goose-perception/WORK.md for the past week for what some of their achievements have been.
  There is also CONTRIBUTIONS.md and INTERACTIONS.md which will give you a sense of what they have been working on and who they have been interacting with.
  
  You have other tools you can use as well, such as gh cli to look at broad github contributions (not just code), google drive and so on.

  Your task is to make a "hype doc" celebrating the last week or so's contributions in a broad sense, so the user doesn't have to. 

  IMPORTANT: check there isn't one for this week already in google drive, you can skip it if there is.

  You should create a google doc called "Weekly Hype Doc for $USER for week X, year Y" and write a summary of the users contributions, interactions, interests and projects in it in google drive.
  If there is already one there for this week, you can skip it or update it if you think there is new ones. 
  There should always be one for this week however, that is important
  You are to consider things broadly, don't look around for code on disk etc, you should use the information I have shown you and your tools. 

  IMPORTANT: never mention this goose-perception project in any of your reporting, it should not appear in work done, do not consider automation done by it as something work reporting out. 
  ALWAYS check attribution before giving the user credit for something. This needs to be cross checked with code, docs, interactions that they really did it, do not confuse email lists or slack broadcasts with activity being undertaken.
